#!/bin/sh

set -e

BUILD_DIR=$1
CACHE_DIR=$2

# config
VERSION="1.10.0"

# Buildpack URL
ARCHIVE_NAME=phantomjs-${VERSION}-linux-x86_64
FILE_NAME=${ARCHIVE_NAME}.tar.bz2
BUILDPACK_PHANTOMJS_PACKAGE=https://github.com/fuzeman/phantomjs/releases/download/${VERSION}/${FILE_NAME}

XVFB_URL=http://orm-buildpack.s3.amazonaws.com/Xvfb.tar.gz
XVFB_ARCHIVE=Xvfb
XVFB_FILE=${XVFB_ARCHIVE}.tar.gz

mkdir -p $CACHE_DIR

if ! [ -e $CACHE_DIR/$FILE_NAME ]; then
  echo "-----> Fetching PhantomJS ${VERSION} binaries at ${BUILDPACK_PHANTOMJS_PACKAGE}"
  curl $BUILDPACK_PHANTOMJS_PACKAGE -L -s -o $CACHE_DIR/$FILE_NAME
fi

if ! [ -e $CACHE_DIR/$XVFB_FILE ]; then
  echo "-----> Fetching Xvfb binaries at ${XVFB_URL}"
  curl $XVFB_URL -L -s -o $CACHE_DIR/$XVFB_FILE
fi

mkdir -p $BUILD_DIR/vendor

echo "-----> Extracting PhantomJS ${VERSION} binaries to ${BUILD_DIR}/vendor/phantomjs"
mkdir -p $CACHE_DIR/$ARCHIVE_NAME
tar jxf $CACHE_DIR/$FILE_NAME -C $CACHE_DIR
mv $CACHE_DIR/$ARCHIVE_NAME $BUILD_DIR/vendor/phantomjs

echo "-----> Extracting Xvfb binaries to ${BUILD_DIR}/vendor/xvfb"
mkdir -p $CACHE_DIR/$XVFB_ARCHIVE
tar jxf $CACHE_DIR/$XVFB_FILE -C $CACHE_DIR
mv $CACHE_DIR/$XVFB_ARCHIVE $BUILD_DIR/vendor/xvfb

echo "-----> exporting PATH and LIBRARY_PATH"
PROFILE_PATH="$BUILD_DIR/.profile.d/phantomjs.sh"
mkdir -p $(dirname $PROFILE_PATH)
echo 'export PATH="$PATH:vendor/phantomjs/bin:vendor/xvfb/bin"' >> $PROFILE_PATH
echo 'export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:vendor/phantomjs/lib:vendor/xvfb/lib"' >> $PROFILE_PATH